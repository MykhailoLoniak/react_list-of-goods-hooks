{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Reset","sortFilter","setSortFilter","reverseOrder","setReverseOrder","visibleGoods","goods","sortedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAwBKA,E,0EAjBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAOGD,K,oBAAAA,E,gBAAAA,E,eAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAoCC,mBAAmBH,EAASI,OAAhE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACMC,EA3BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAW,YAAOD,GAgBxB,OAdAC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAG7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAILX,EAA6BI,EAAYQ,UAA1BR,EAMFS,CACnBnB,EACAI,EACAE,GAYF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYlB,IAAeL,EAASe,UACnC,kBACHS,QAAS,kBAAMlB,EAAcN,EAASe,WALxC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYlB,IAAeL,EAASiB,QACnC,qBACHO,QAAS,kBAAMlB,EAAcN,EAASiB,SALxC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,CACZ,YAAahB,GACZ,qBACHiB,QArCR,WACEhB,GAAiBD,IA+Bb,qBAUCkB,KAAKC,UAAUjB,KAAkBgB,KAAKC,UAAUzB,GAC7C,GACA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYlB,IAAeL,EAASI,OACnC,oBACHoB,QA7CZ,WACElB,EAAcN,EAASI,OACvBI,GAAgB,IAsCR,sBAWN,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCvHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06aff989.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const SORT_BY_ALPHABET = 'alphabet';\n// const SORT_BY_LENGTH = 'length';\n// const RESET = 'reset';\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Reset = 'reset',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortFilter: SortType,\n  reverseOrder: boolean,\n) {\n  const sortedGoods = [...goods];\n\n  sortedGoods.sort((good1, good2) => {\n    switch (sortFilter) {\n      case SortType.Alphabet: {\n        return good1.localeCompare(good2);\n      }\n\n      case SortType.Length:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return !reverseOrder ? sortedGoods : sortedGoods.reverse();\n}\n\nexport const App: React.FC = () => {\n  const [sortFilter, setSortFilter] = useState<SortType>(SortType.Reset);\n  const [reverseOrder, setReverseOrder] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortFilter,\n    reverseOrder,\n  );\n\n  function toggleReverse() {\n    setReverseOrder(!reverseOrder);\n  }\n\n  function handleReset() {\n    setSortFilter(SortType.Reset);\n    setReverseOrder(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': sortFilter !== SortType.Alphabet,\n          }, 'button is-info')}\n          onClick={() => setSortFilter(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': sortFilter !== SortType.Length,\n          }, 'button is-success')}\n          onClick={() => setSortFilter(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': !reverseOrder,\n          }, 'button is-warning')}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) === JSON.stringify(goodsFromServer)\n          ? '' : (\n            <button\n              type=\"button\"\n              className={cn({\n                'is-light': sortFilter !== SortType.Reset,\n              }, 'button is-danger')}\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}